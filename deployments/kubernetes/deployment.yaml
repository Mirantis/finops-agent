apiVersion: apps/v1
kind: Deployment
metadata:
  name: forecasting-agent
  namespace: kof
  labels:
    app: forecasting-agent
spec:
  selector:
    matchLabels:
      app: forecasting-agent
  template:
    metadata:
      labels:
        app: forecasting-agent
    spec:
      containers:
      - name: forecasting-agent
        image: ghcr.io/mirantis/finops-agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
      volumes:
      - name: config
        configMap:
          name: forecasting-agent-config
---
apiVersion: v1
kind: Service
metadata:
  name: forecasting-agent
  namespace: kof
  labels:
    app: forecasting-agent
spec:
  ports:
  - port: 8081
    targetPort: metrics
    name: metrics
  selector:
    app: forecasting-agent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: forecasting-agent-config
  namespace: kof
data:
  config.yaml: |
    # Configuration for the finops-agent
    
    # Agent configuration
    agent:
      interval: 3600  # seconds between forecast updates
    
    # Collector configuration
    collector:
      type: prometheus
      url: http://kof-mothership-promxy.kof.svc.cluster.local:8082
      lookback_days: 14 
      step: "1h"  # Consistent step size for all queries
      disable_ssl: true
      timeout: 300
      max_retries: 3
      chunk_days: 0.25  # 6 hours for better granular processing

    # Model configuration
    models:
      type: toto
      forecast_horizon: 7 # number of days ahead in future
      quantiles: [0.1, 0.5, 0.9]
      toto:
        checkpoint: Datadog/Toto-Open-Base-1.0
        device: cuda              # or cpu
        context_length: 4096
        num_samples: 256
        compile: true

    # Optimizer configuration
    optimizer:
      idle_cpu_threshold: 0.5
      idle_mem_threshold: 0.5
      min_node_savings: 1

    # Validation configuration
    validation:
      enabled: true
      interval_cycles: 2  # Run validation every 2 forecast cycles
      train_ratio: 0.7    # Use 70% for training, 30% for testing
      log_level: INFO

    # Metrics configuration
    metrics:
      forecast_api_port: 8081
      forecast_api_host: "0.0.0.0"

    # Node normalization configuration
    node_normalization:
      enabled: True
      kube_node_info_query: "kube_node_info"  # Query to get node mappings
      fallback_to_original: True  # Return original name if no mapping found
      log_mapping_stats: True  # Log mapping statistics for debugging
