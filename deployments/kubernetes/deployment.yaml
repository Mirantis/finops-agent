apiVersion: apps/v1
kind: Deployment
metadata:
  name: forecasting-agent
  namespace: kof
  labels:
    app: forecasting-agent
spec:
  selector:
    matchLabels:
      app: forecasting-agent
  template:
    metadata:
      labels:
        app: forecasting-agent
    spec:
      containers:
      - name: forecasting-agent
        image: ghcr.io/ramessesii2/finops-agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: metrics
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 256Mi
        #   limits:
        #     cpu: 500m
        #     memory: 512Mi
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
      volumes:
      - name: config
        configMap:
          name: forecasting-agent-config
---
apiVersion: v1
kind: Service
metadata:
  name: forecasting-agent
  namespace: kof
  labels:
    app: forecasting-agent
spec:
  ports:
  - port: 8081
    targetPort: metrics
    name: metrics
  selector:
    app: forecasting-agent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: forecasting-agent-config
  namespace: kof
data:
  config.yaml: |
    # Collector configuration
    collector:
      type: prometheus
      url: http://kof-mothership-promxy.kof.svc.cluster.local:8082
      lookback_days: 7 
      step: "1h"  # Consistent step size for all queries
      disable_ssl: true
      timeout: 300
      max_retries: 3
      chunk_days: 0.25  # 6 hours for better granular processing, and so 1 for 24 hours

    # Model configuration
    models:
      type: toto
      freq: "h" 
      forecast_horizon: 7 # number of days ahead in future
      quantiles: [0.1, 0.5, 0.9]
      toto:
        checkpoint: Datadog/Toto-Open-Base-1.0
        device: cpu              # or cuda
        context_length: 4096
        num_samples: 256
        compile: True 

    # Optimizer configuration
    optimizer:
      idle_threshold: 0.5  # 50% idle threshold
      min_nodes: 1
      min_savings: 100.0   # Minimum daily savings to report
      min_confidence: 0.8

      lookback_days: 7      # Days to analyze for optimization

    # Metrics configuration
    metrics:
      port: 8081
      host: "0.0.0.0"
      path: /metrics

    # Agent configuration
    agent:
      interval: 300  # seconds between forecast updates

    # Validation configuration
    validation:
      enabled: False
      interval_cycles: 2  # Run validation every 5 forecast cycles
      train_ratio: 0.7    # Use 70% for training, 30% for testing
      log_level: INFO 